{"version":3,"file":"static/js/691.0d0a4d86.chunk.js","mappings":"8SAEaA,EAAS,mCAAG,6GAEAC,EAAAA,EAAAA,IACnB,0FAHmB,cAEfC,EAFe,yBAKdA,EAAOC,MALO,wHAAH,qDAWhBC,EAAS,mCAAG,WAAMC,GAAN,uFACGJ,EAAAA,EAAAA,IAAA,6CACqBI,EADrB,qEADH,cACVC,EADU,yBAITA,GAJS,2CAAH,sDAOFC,EAAc,SAACF,EAAIG,EAASC,GACvC,IACEL,EAAUC,GAAIK,MAAK,SAAAJ,GACjBE,EAAQF,EAAKH,KACd,GAGF,CAFC,MAAOQ,GACPF,EAASE,EACV,CACF,EAEKC,EAAW,mCAAG,WAAMP,GAAN,uFACGJ,EAAAA,EAAAA,IAAA,6CACmBI,EADnB,qEADH,cACZQ,EADY,yBAIXA,GAJW,2CAAH,sDAOJC,EAAgB,SAACT,EAAIU,EAAWN,GAC3C,IACEG,EAAYP,GAAIK,MAAK,SAAAG,GACnBE,EAAUF,EAAOV,KAClB,GAGF,CAFC,MAAOQ,GACPF,EAASE,EACV,CACF,EAEKK,EAAU,mCAAG,WAAMX,GAAN,uFACGJ,EAAAA,EAAAA,IAAA,6CACoBI,EADpB,6DADH,cACXY,EADW,yBAIVA,GAJU,2CAAH,sDAOHC,EAAe,SAACb,EAAIc,EAAUV,GACzC,IACEO,EAAWX,GAAIK,MAAK,SAAAO,GAClBE,EAASF,EAAMd,KAChB,GAGF,CAFC,MAAOQ,GACPF,EAASE,EACV,CACF,EAEKS,EAAW,mCAAG,WAAMC,GAAN,uFACGpB,EAAAA,EAAAA,IAAA,0DACgCoB,EADhC,wFADH,cACZC,EADY,yBAIXA,GAJW,2CAAH,sDAOJC,EAAqB,SAACF,EAAOG,EAAUf,GAClD,IACEW,EAAYC,GAAOX,MAAK,SAAAe,GACtBD,EAASC,GACTC,QAAQC,IAAIF,EACb,GAGF,CAFC,MAAOd,GACPF,EAASE,EAAMiB,QAChB,CACF,C,uIC9EYC,EAAUC,EAAAA,EAAAA,IAAH,0CAIPC,EAAcD,EAAAA,EAAAA,MAAH,gEAKXE,EAAeF,EAAAA,EAAAA,OAAH,wCAIZG,EAAaH,EAAAA,EAAAA,GAAH,4HAQVI,EAAQJ,EAAAA,EAAAA,GAAH,+E,SCXH,SAASK,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOf,EAAP,KAAcgB,EAAd,KACA,GAA4BD,EAAAA,EAAAA,YAA5B,eAAOlC,EAAP,KAAeoC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,YAA1B,eAAOzB,EAAP,KAAcF,EAAd,KACA,GAAwC8B,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAYF,EAAaG,IAAI,SAiBnC,OALAC,EAAAA,EAAAA,YAAU,WACU,OAAdF,IACJnB,EAAAA,EAAAA,IAAmBmB,EAAWJ,EAAW7B,EAC1C,GAAE,CAACiC,KAGF,UAACb,EAAD,YACE,kBAAMgB,SAbW,SAAAC,GACnBA,EAAEC,iBACFN,EAAgB,CAAExB,MAAOI,IACzBgB,EAAS,GACV,EASG,WACE,SAACN,EAAD,CACEiB,KAAK,OACLC,MAAO5B,EACP6B,SArBa,SAAAJ,GACnBT,EAASS,EAAEK,OAAOF,MACnB,KAqBK,SAACjB,EAAD,CAAcgB,KAAK,SAAnB,uBAGDrC,IAAS,gDAETT,IACC,SAAC+B,EAAD,UACG/B,EAAOC,KAAKiD,QAAQC,KAAI,YAA0B,IAAvBhD,EAAsB,EAAtBA,GAAIiD,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACrC,OACE,SAACrB,EAAD,WACE,SAAC,KAAD,CAAMsB,GAAE,0CAAqCnD,GAA7C,SACGiD,GAASC,KAFFlD,EAMf,QAKV,C","sources":["Shared/API/fetcher.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const getMovies = async () => {\n  try {\n    const movies = await axios.get(\n      'https://api.themoviedb.org/3/trending/all/day?api_key=6eb99de4e2c3a3cd0d9a0ef8005c8dec'\n    );\n    return movies.data;\n  } catch (error) {\n    return error;\n  }\n};\n\nconst fetchCast = async id => {\n  const cast = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=6eb99de4e2c3a3cd0d9a0ef8005c8dec&language=en-US`\n  );\n  return cast;\n};\n\nexport const getCastById = (id, setCast, setError) => {\n  try {\n    fetchCast(id).then(cast => {\n      setCast(cast.data);\n    });\n  } catch (error) {\n    setError(error);\n  }\n};\n\nconst fetchReview = async id => {\n  const review = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=6eb99de4e2c3a3cd0d9a0ef8005c8dec&language=en-US`\n  );\n  return review;\n};\n\nexport const getReviewById = (id, setReview, setError) => {\n  try {\n    fetchReview(id).then(review => {\n      setReview(review.data);\n    });\n  } catch (error) {\n    setError(error);\n  }\n};\n\nconst fetchMovie = async id => {\n  const movie = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=6eb99de4e2c3a3cd0d9a0ef8005c8dec&language=en-US`\n  );\n  return movie;\n};\n\nexport const getMovieById = (id, setMovie, setError) => {\n  try {\n    fetchMovie(id).then(movie => {\n      setMovie(movie.data);\n    });\n  } catch (error) {\n    setError(error);\n  }\n};\n\nconst searchMovie = async query => {\n  const result = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=6eb99de4e2c3a3cd0d9a0ef8005c8dec&language=en-US&page=1&include_adult=false`\n  );\n  return result;\n};\n\nexport const searchMovieByQuery = (query, setState, setError) => {\n  try {\n    searchMovie(query).then(res => {\n      setState(res);\n      console.log(res);\n    });\n  } catch (error) {\n    setError(error.message);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n`;\n\nexport const SearchInput = styled.input`\n  width: 300px;\n  margin-right: 10px;\n`;\n\nexport const SearchButton = styled.button`\n  width: 60px;\n`;\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 20px 0;\n  margin: 0;\n  list-style: none;\n`;\n\nexport const Movie = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { searchMovieByQuery } from 'Shared/API/fetcher';\nimport { useSearchParams } from 'react-router-dom';\nimport {\n  Wrapper,\n  SearchInput,\n  SearchButton,\n  MoviesList,\n  Movie,\n} from './Movies.styled';\nimport { Link } from 'react-router-dom';\n\nexport default function MoviesSearcher() {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState();\n  const [error, setError] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movie');\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ movie: query });\n    setQuery('');\n  };\n\n  useEffect(() => {\n    if (movieName === null) return;\n    searchMovieByQuery(movieName, setMovies, setError);\n  }, [movieName]);\n\n  return (\n    <Wrapper>\n      <form onSubmit={handleSubmit}>\n        <SearchInput\n          type=\"text\"\n          value={query}\n          onChange={handleChange}\n        ></SearchInput>\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </form>\n\n      {error && <h2>Sorry, try it again</h2>}\n\n      {movies && (\n        <MoviesList>\n          {movies.data.results.map(({ id, title, name }) => {\n            return (\n              <Movie key={id}>\n                <Link to={`/goit-react-hw-05-movies/movies/${id}`}>\n                  {title || name}\n                </Link>\n              </Movie>\n            );\n          })}\n        </MoviesList>\n      )}\n    </Wrapper>\n  );\n}\n"],"names":["getMovies","axios","movies","data","fetchCast","id","cast","getCastById","setCast","setError","then","error","fetchReview","review","getReviewById","setReview","fetchMovie","movie","getMovieById","setMovie","searchMovie","query","result","searchMovieByQuery","setState","res","console","log","message","Wrapper","styled","SearchInput","SearchButton","MoviesList","Movie","MoviesSearcher","useState","setQuery","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","onSubmit","e","preventDefault","type","value","onChange","target","results","map","title","name","to"],"sourceRoot":""}